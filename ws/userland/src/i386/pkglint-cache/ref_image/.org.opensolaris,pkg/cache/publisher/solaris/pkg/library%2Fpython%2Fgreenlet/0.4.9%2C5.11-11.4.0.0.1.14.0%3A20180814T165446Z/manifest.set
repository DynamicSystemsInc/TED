set name=pkg.fmri value=pkg://solaris/library/python/greenlet@0.4.9,5.11-11.4.0.0.1.14.0:20180814T165446Z
set name=com.oracle.info.name value=greenlet
set name=com.oracle.info.description value="the Python greenlet coroutine module"
set name=info.classification value=org.opensolaris.category.2008:Development/Python
set name=pkg.summary value="Lightweight in-process concurrent programming"
set name=pkg.description value="The greenlet package supports micro-threads called 'tasklets'. Tasklets run pseudo-concurrently (typically in a single or a few OS-level threads) and are synchronized with data exchanges on 'channels'. A 'greenlet', on the other hand, is a still more primitive notion of micro-thread with no implicit scheduling; coroutines, in other words. This is useful when one want to control exactly when one's code runs. One can build custom scheduled micro-threads on top of greenlet; However, greenlets are useful on their own as a way to make advanced control flow structures. For example, one can recreate generators; the difference with Python's own generators is that greenlet's generators can call nested functions and the nested functions can yield values too."
set name=variant.arch value=i386 value=sparc
set name=info.upstream value="Ralf Schmitt <ralf@systemexit.de>"
set name=com.oracle.info.consolidation.repository-changeset value=015c52ec5ff2
set name=com.oracle.info.consolidation.repository-url value=https://github.com/oracle/solaris-userland.git
set name=org.opensolaris.arc-caseid value=PSARC/2013/140
set name=info.upstream-url value=https://github.com/python-greenlet/greenlet
set name=pkg.tmp.incorporate value=consolidation/userland/userland-incorporation
set name=info.source-url value=pypi:///greenlet==0.4.9
set name=com.oracle.info.version value=0.4.9
set name=org.opensolaris.consolidation value=userland
set name=pkg.variant value=arch
set name=pkg.facet.common value=""
set name=pkg.sizes.common value=csz=1971 value=sz=2583
