diff -ur a/Makefile.am b/Makefile.am
--- a/Makefile.am	2020-05-10 10:04:35.488740840 +0000
+++ b/Makefile.am	2020-05-10 09:39:08.802098669 +0000
@@ -35,6 +35,10 @@
 GLAMOR_DIR=glamor
 endif
 
+if BUILD_TSOL_MODULE
+TSOL_DIR=tsol
+endif
+
 SUBDIRS = \
 	doc \
 	man \
@@ -59,6 +63,7 @@
 	$(PRESENT_DIR) \
 	$(DRI3_DIR) \
 	IA \
+	$(TSOL_DIR) \
 	exa \
 	$(GLAMOR_DIR) \
 	config \
diff -ur a/Xext/security.c b/Xext/security.c
--- a/Xext/security.c	2018-10-25 07:13:21.000000000 +0000
+++ b/Xext/security.c	2020-05-10 09:39:08.802904340 +0000
@@ -1088,3 +1088,28 @@
     /* Label objects that were created before we could register ourself */
     SecurityLabelInitial();
 }
+
+/* API needed for Xtsol module to get/set client trustLevel */
+_X_EXPORT unsigned int
+getClientTrustLevel(ClientPtr client)
+{
+    SecurityStateRec *state;
+
+    state = dixLookupPrivate(&client->devPrivates, stateKey);
+
+    return state->trustLevel;
+}
+
+_X_EXPORT unsigned int
+setClientTrustLevel(ClientPtr client, unsigned int newLevel)
+{
+    SecurityStateRec *state;
+    unsigned int oldLevel;
+
+    state = dixLookupPrivate(&client->devPrivates, stateKey);
+    oldLevel = state->trustLevel;
+    state->trustLevel = newLevel;
+
+    return oldLevel;
+}
+
diff -ur a/Xext/securitysrv.h b/Xext/securitysrv.h
--- a/Xext/securitysrv.h	2018-10-25 07:13:21.000000000 +0000
+++ b/Xext/securitysrv.h	2020-05-10 09:39:08.813157418 +0000
@@ -79,4 +79,8 @@
 /* Give this value or higher to the -audit option to get security messages */
 #define SECURITY_AUDIT_LEVEL 4
 
+/* API needed for Xtsol module to get/set client trustLevel */
+extern _X_EXPORT unsigned int getClientTrustLevel(ClientPtr client);
+extern _X_EXPORT unsigned int setClientTrustLevel(ClientPtr client, unsigned int newLevel);
+
 #endif                          /* _SECURITY_SRV_H */
diff -ur a/configure.ac b/configure.ac
--- a/configure.ac	2020-05-10 10:04:35.615310066 +0000
+++ b/configure.ac	2020-05-10 10:02:27.724034712 +0000
@@ -194,6 +194,14 @@
 # But we don't want to link everything with libm
 LIBS="${LIBS//-lm}"
 
+dnl Check for libtsol for Solaris Trusted Extensions module
+AC_CHECK_LIB(tsol, bsllow, [BUILD_TSOL_MODULE=yes], [BUILD_TSOL_MODULE=no])
+AM_CONDITIONAL(BUILD_TSOL_MODULE, [test x$BUILD_TSOL_MODULE = xyes])
+if test "x$BUILD_TSOL_MODULE" = xyes; then
+       TSOL_LIB='$(top_builddir)/tsol/libxtsol.la'
+       TSOL_SYS_LIBS='-ltsol -ltsnet -lsecdb -lbsm'
+fi
+
 dnl AGPGART headers
 AC_CHECK_HEADERS([linux/agpgart.h sys/agpio.h sys/agpgart.h], AGP=yes)
 AM_CONDITIONAL(AGP, [test "x$AGP" = xyes])
@@ -754,7 +762,7 @@

 dnl Required modules
 XPROTO="xproto >= 7.0.31"
-RANDRPROTO="randrproto >= 1.6.0"
+RANDRPROTO="randrproto >= 1.5.0"
 RENDERPROTO="renderproto >= 0.11"
 XEXTPROTO="xextproto >= 7.2.99.901"
 INPUTPROTO="inputproto >= 2.3"
@@ -1788,6 +1796,8 @@
 if test "x$XVFB" = xyes; then
 	XVFB_LIBS="$FB_LIB $FIXES_LIB $XEXT_LIB $DBE_LIB $RECORD_LIB $GLX_LIBS $RANDR_LIB $RENDER_LIB $DAMAGE_LIB $DRI3_LIB $PRESENT_LIB $MIEXT_SYNC_LIB $MIEXT_DAMAGE_LIB $MIEXT_SHADOW_LIB $XI_LIB $XKB_LIB $XKB_STUB_LIB $COMPOSITE_LIB"
 	XVFB_SYS_LIBS="$XVFBMODULES_LIBS $GLX_SYS_LIBS"
+        XVFB_LIBS="$XVFB_LIBS $TSOL_LIB"
+        XVFB_SYS_LIBS="$XVFB_SYS_LIBS $TSOL_SYS_LIBS"
 	AC_SUBST([XVFB_LIBS])
 	AC_SUBST([XVFB_SYS_LIBS])
 fi
@@ -1809,6 +1819,8 @@
 	fi
 	XNEST_LIBS="$FB_LIB $FIXES_LIB $MI_LIB $XEXT_LIB $DBE_LIB $RECORD_LIB $GLX_LIBS $RANDR_LIB $DAMAGE_LIB  $DRI3_LIB $PRESENT_LIB $MIEXT_SYNC_LIB $MIEXT_DAMAGE_LIB $RENDER_LIB $MIEXT_SHADOW_LIB $XI_LIB $XKB_LIB $XKB_STUB_LIB $COMPOSITE_LIB $MAIN_LIB $DIX_LIB $OS_LIB"
 	XNEST_SYS_LIBS="$XNESTMODULES_LIBS $GLX_SYS_LIBS"
+	XNEST_LIBS="$XNEST_LIBS $TSOL_LIB"
+	XNEST_SYS_LIBS="$XNEST_SYS_LIBS $TSOL_SYS_LIBS"
 	AC_SUBST([XNEST_LIBS])
 	AC_SUBST([XNEST_SYS_LIBS])
 fi
@@ -2354,6 +2366,7 @@
     KDRIVE_CFLAGS="$XSERVER_CFLAGS"
 
     KDRIVE_PURE_LIBS="$FB_LIB $MI_LIB $FIXES_LIB $XEXT_LIB $DBE_LIB $RECORD_LIB $GLX_LIBS $RANDR_LIB $RENDER_LIB $DAMAGE_LIB $DRI3_LIB $PRESENT_LIB $MIEXT_SYNC_LIB $MIEXT_DAMAGE_LIB $MIEXT_SHADOW_LIB $XI_LIB $XKB_LIB $XKB_STUB_LIB $COMPOSITE_LIB $OS_LIB"
+    KDRIVE_PURE_LIBS="$KDRIVE_PURE_LIBS $TSOL_LIB"
     KDRIVE_LIB='$(top_builddir)/hw/kdrive/src/libkdrive.la'
     KDRIVE_MAIN_LIB="$MAIN_LIB"
     KDRIVE_LOCAL_LIBS="$DIX_LIB $KDRIVE_LIB"
@@ -2603,3 +2616,7 @@
 
 # Add Sun IA extension
 AC_OUTPUT([IA/Makefile])
+
+# Add Sun Trusted Extensions extension
+AC_OUTPUT([tsol/Makefile])
+
diff -ur a/dix/dispatch.c b/dix/dispatch.c
--- a/dix/dispatch.c	2018-10-25 07:13:21.000000000 +0000
+++ b/dix/dispatch.c	2020-05-10 09:39:08.805322315 +0000
@@ -73,8 +73,8 @@
 
 ******************************************************************/
 
-/* XSERVER_DTRACE additions:
- * Copyright (c) 2005-2006, Oracle and/or its affiliates. All rights reserved.
+/*
+ * Copyright (c) 2005, 2006, Oracle and/or its affiliates. All rights reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a
  * copy of this software and associated documentation files (the "Software"),
@@ -159,6 +159,10 @@
 
 static void KillAllClients(void);
 
+#ifdef TSOL
+SecurityHookPtr pSecHook = NULL;
+#endif /* TSOL */
+
 static int nextFreeClientID;    /* always MIN free client ID */
 
 static int nClients;            /* number of authorized clients */
@@ -936,7 +940,12 @@
     return Success;
 }
 
-static int
+#ifdef TSOL
+_X_EXPORT
+#else
+static
+#endif
+int
 GetGeometry(ClientPtr client, xGetGeometryReply * rep)
 {
     DrawablePtr pDraw;
@@ -2066,7 +2075,12 @@
     return Success;
 }
 
-static int
+#ifdef TSOL
+_X_EXPORT
+#else
+static
+#endif
+int
 DoGetImage(ClientPtr client, int format, Drawable drawable,
            int x, int y, int width, int height,
            Mask planemask)
diff -ur a/dix/events.c b/dix/events.c
--- a/dix/events.c	2018-10-25 07:13:21.000000000 +0000
+++ b/dix/events.c	2020-05-10 09:39:08.806354519 +0000
@@ -2874,6 +2874,9 @@
  *
  * @returns the window at the given coordinates.
  */
+#ifdef TSOL
+_X_EXPORT
+#endif
 WindowPtr
 XYToWindow(SpritePtr pSprite, int x, int y)
 {
diff -ur a/dix/window.c b/dix/window.c
--- a/dix/window.c	2018-10-25 07:13:21.000000000 +0000
+++ b/dix/window.c	2020-05-10 09:39:08.807264045 +0000
@@ -95,6 +95,33 @@
 Equipment Corporation.
 
 ******************************************************************/
+/* Copyright (c) 2006, Oracle and/or its affiliates. All rights reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the
+ * "Software"), to deal in the Software without restriction, including
+ * without limitation the rights to use, copy, modify, merge, publish,
+ * distribute, and/or sell copies of the Software, and to permit persons
+ * to whom the Software is furnished to do so, provided that the above
+ * copyright notice(s) and this permission notice appear in all copies of
+ * the Software and that both the above copyright notice(s) and this
+ * permission notice appear in supporting documentation.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+ * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
+ * OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
+ * HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
+ * INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
+ * FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
+ * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
+ * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
+ *
+ * Except as contained in this notice, the name of a copyright holder
+ * shall not be used in advertising or otherwise to promote the sale, use
+ * or other dealings in this Software without prior written authorization
+ * of the copyright holder.
+ */
 
 #ifdef HAVE_DIX_CONFIG_H
 #include <dix-config.h>
@@ -182,6 +209,10 @@
 
 #define SubStrSend(pWin,pParent) (StrSend(pWin) || SubSend(pParent))
 
+#ifdef TSOL
+#include "extnsionst.h"
+#endif /* TSOL */
+
 #ifdef COMPOSITE
 static const char *overlay_win_name = "<composite overlay>";
 #endif
@@ -1955,7 +1987,12 @@
     return Below;
 }
 
-static BoxPtr
+#ifdef TSOL
+_X_EXPORT
+#else
+static
+#endif
+BoxPtr
 WindowExtents(WindowPtr pWin, BoxPtr pBox)
 {
     pBox->x1 = pWin->drawable.x - wBorderWidth(pWin);
@@ -1982,7 +2019,12 @@
     return pRgn;
 }
 
-static Bool
+#ifdef TSOL
+_X_EXPORT
+#else
+static
+#endif
+Bool
 ShapeOverlap(WindowPtr pWin, BoxPtr pWinBox, WindowPtr pSib, BoxPtr pSibBox)
 {
     RegionPtr pWinRgn, pSibRgn;
@@ -2156,7 +2198,12 @@
     }
 }
 
-static void
+#ifdef TSOL
+_X_EXPORT
+#else
+static
+#endif
+void
 ReflectStackChange(WindowPtr pWin, WindowPtr pSib, VTKind kind)
 {
 /* Note that pSib might be NULL */
diff -ur a/hw/xfree86/common/xf86Config.c b/hw/xfree86/common/xf86Config.c
--- a/hw/xfree86/common/xf86Config.c	2020-05-10 10:04:35.564244292 +0000
+++ b/hw/xfree86/common/xf86Config.c	2020-05-10 10:28:38.242129950 +0000
@@ -118,6 +118,7 @@
     {.name = "fb",.toLoad = TRUE,.load_opt = NULL},
     {.name = "shadow",.toLoad = TRUE,.load_opt = NULL},
 #endif
+    {.name = "xtsol",.toLoad = TRUE,.load_opt = NULL},
     {.name = NULL,.toLoad = FALSE,.load_opt = NULL}
 };
 
@@ -254,7 +255,7 @@
 
     const char *ignore[] = { "GLcore", "speedo", "bitmap", "drm",
         "freetype", "type1",
-	"bitstream", "ia", "xtsol",
+	"bitstream", "ia",
         NULL
     };
     void **optarray;
diff -ur a/hw/xfree86/dixmods/Makefile.am b/hw/xfree86/dixmods/Makefile.am
--- a/hw/xfree86/dixmods/Makefile.am	2018-10-25 07:13:21.000000000 +0000
+++ b/hw/xfree86/dixmods/Makefile.am	2020-05-10 09:39:08.807783430 +0000
@@ -46,3 +46,12 @@
 
 libdixmods_la_SOURCES = $(top_srcdir)/mi/miinitext.c
 libdixmods_la_CFLAGS = $(AM_CFLAGS)
+
+if BUILD_TSOL_MODULE
+# Sun Trusted Extensions extension module additions
+extsmodule_LTLIBRARIES += libxtsol.la
+libxtsol_la_LDFLAGS = -avoid-version
+libxtsol_la_LIBADD = $(top_builddir)/tsol/libxtsol.la $(PIXMAN_LIBS)
+libxtsol_la_SOURCES = tsolmodule.c
+endif
+
diff -ur a/include/dix.h b/include/dix.h
--- a/include/dix.h	2018-10-25 07:13:21.000000000 +0000
+++ b/include/dix.h	2020-05-10 09:39:08.808290553 +0000
@@ -177,6 +177,14 @@
 
 extern _X_HIDDEN Bool CreateConnectionBlock(void);
 
+#ifdef TSOL
+extern _X_EXPORT int DoGetImage(ClientPtr client, int format, Drawable drawable,
+                      int x, int y, int width, int height,
+                      Mask planemask);
+
+extern _X_EXPORT int GetGeometry(ClientPtr client, xGetGeometryReply *rep);
+#endif
+
 /* dixutils.c */
 
 extern _X_EXPORT int CompareISOLatin1Lowered(const unsigned char * /*a */ ,
diff -ur a/include/dixstruct.h b/include/dixstruct.h
--- a/include/dixstruct.h	2018-10-25 07:13:21.000000000 +0000
+++ b/include/dixstruct.h	2020-05-10 09:39:08.808831896 +0000
@@ -155,7 +155,7 @@
 Bool
 clients_are_ready(void);
 
-extern struct xorg_list output_pending_clients;
+extern _X_EXPORT struct xorg_list output_pending_clients;
 
 static inline void
 output_pending_mark(ClientPtr client)
@@ -222,7 +222,7 @@
 
 extern _X_EXPORT int (*SwappedProcVector[256]) (ClientPtr /*client */ );
 
-extern ReplySwapPtr ReplySwapVector[256];
+extern _X_EXPORT ReplySwapPtr ReplySwapVector[256];
 
 extern _X_EXPORT int
 ProcBadRequest(ClientPtr /*client */ );
diff -ur a/include/input.h b/include/input.h
--- a/include/input.h	2018-10-25 07:13:21.000000000 +0000
+++ b/include/input.h	2020-05-10 09:39:08.810428398 +0000
@@ -406,7 +406,7 @@
                          int /*led */ ,
                          Bool /*on */ );
 
-extern void MaybeStopHint(DeviceIntPtr /*device */ ,
+extern _X_EXPORT void MaybeStopHint(DeviceIntPtr /*device */ ,
                           ClientPtr /*client */ );
 
 extern void ProcessPointerEvent(InternalEvent * /* ev */ ,
diff -ur a/include/swaprep.h b/include/swaprep.h
--- a/include/swaprep.h	2018-10-25 07:13:21.000000000 +0000
+++ b/include/swaprep.h	2020-05-10 09:39:08.809334838 +0000
@@ -26,7 +26,7 @@
 #ifndef SWAPREP_H
 #define SWAPREP_H 1
 
-extern void Swap32Write(ClientPtr /* pClient */ ,
+extern _X_EXPORT void Swap32Write(ClientPtr /* pClient */ ,
                         int /* size */ ,
                         CARD32 * /* pbuf */ );
 
diff -ur a/include/extnsionst.h b/include/extnsionst.h
--- a/include/extnsionst.h	2018-10-25 07:13:21.000000000 +0000
+++ b/include/extnsionst.h	2020-05-10 09:39:08.809872371 +0000
@@ -43,6 +43,33 @@
 SOFTWARE.
 
 ******************************************************************/
+/* Copyright (c) 2006, 2007, Oracle and/or its affiliates. All rights reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the
+ * "Software"), to deal in the Software without restriction, including
+ * without limitation the rights to use, copy, modify, merge, publish,
+ * distribute, and/or sell copies of the Software, and to permit persons
+ * to whom the Software is furnished to do so, provided that the above
+ * copyright notice(s) and this permission notice appear in all copies of
+ * the Software and that both the above copyright notice(s) and this
+ * permission notice appear in supporting documentation.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+ * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
+ * OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
+ * HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
+ * INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
+ * FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
+ * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
+ * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
+ *
+ * Except as contained in this notice, the name of a copyright holder
+ * shall not be used in advertising or otherwise to promote the sale, use
+ * or other dealings in this Software without prior written authorization
+ * of the copyright holder.
+ */
 
 #ifndef EXTENSIONSTRUCT_H
 #define EXTENSIONSTRUCT_H
@@ -54,6 +81,10 @@
 #include "gc.h"
 #include "privates.h"
 
+#ifdef TSOL
+#include "inputstr.h"
+#endif /* TSOL */
+
 typedef struct _ExtensionEntry {
     int index;
     void (*CloseDown) (         /* called at server shutdown */
@@ -98,4 +129,20 @@
 extern _X_EXPORT ExtensionEntry *
 GetExtensionEntry(int major);
 
+#ifdef TSOL
+typedef struct
+{
+    XID (*CheckAuthorization)(unsigned int, char *, unsigned int,
+       char *, ClientPtr , const char **);
+    int (*ChangeWindowProperty)(ClientPtr, WindowPtr, Atom, Atom, int, int,
+        unsigned long, void *, Bool);
+    int (*DeleteProperty)(ClientPtr, WindowPtr, Atom);
+    void (*DeleteClientFromAnySelections)(ClientPtr);
+    void (*DeleteWindowFromAnySelections)(WindowPtr);
+} SecurityHook, *SecurityHookPtr;
+
+extern _X_EXPORT SecurityHookPtr pSecHook;
+
+#endif /* TSOL */
+
 #endif                          /* EXTENSIONSTRUCT_H */
diff -ur a/include/window.h b/include/window.h
--- a/include/window.h	2018-10-25 07:13:21.000000000 +0000
+++ b/include/window.h	2020-05-10 09:39:08.810951705 +0000
@@ -231,5 +231,11 @@
 extern _X_EXPORT void PrintWindowTree(void);
 extern _X_EXPORT void PrintPassiveGrabs(void);
 
+#ifdef TSOL
+#include "validate.h" /* needed for VTKind enum definition */
+extern _X_EXPORT void ReflectStackChange(WindowPtr pWin, WindowPtr pSib,
+                                         VTKind  kind);
+#endif
+
 extern _X_EXPORT VisualPtr WindowGetVisual(WindowPtr /*pWin*/);
 #endif                          /* WINDOW_H */
diff -ur a/mi/miinitext.c b/mi/miinitext.c
--- a/mi/miinitext.c	2020-05-10 10:04:35.493033234 +0000
+++ b/mi/miinitext.c	2020-05-10 10:23:25.161740386 +0000
@@ -89,6 +89,7 @@
 #undef DAMAGE
 #undef COMPOSITE
 #undef MITSHM
+#undef TSOL
 #endif
 
 #ifdef HAVE_XNEST_CONFIG_H
@@ -107,6 +108,11 @@
 #include "os.h"
 #include "globals.h"
 
+#ifdef TSOL
+#include "../tsol/tsolextension.h"
+Bool noXTSolExtension;
+#endif
+
 /* List of built-in (statically linked) extensions */
 static const ExtensionModule staticExtensions[] = {
     {GEExtensionInit, "Generic Event Extension", &noGEExtension},
diff -ur a/os/connection.c b/os/connection.c
--- a/os/connection.c	2018-10-25 07:13:21.000000000 +0000
+++ b/os/connection.c	2020-05-10 09:39:08.812745830 +0000
@@ -43,6 +43,34 @@
 SOFTWARE.
 
 ******************************************************************/
+/* Copyright (c) 2006, Oracle and/or its affiliates. All rights reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the
+ * "Software"), to deal in the Software without restriction, including
+ * without limitation the rights to use, copy, modify, merge, publish,
+ * distribute, and/or sell copies of the Software, and to permit persons
+ * to whom the Software is furnished to do so, provided that the above
+ * copyright notice(s) and this permission notice appear in all copies of
+ * the Software and that both the above copyright notice(s) and this
+ * permission notice appear in supporting documentation.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+ * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
+ * OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
+ * HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
+ * INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
+ * FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
+ * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
+ * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
+ *
+ * Except as contained in this notice, the name of a copyright holder
+ * shall not be used in advertising or otherwise to promote the sale, use
+ * or other dealings in this Software without prior written authorization
+ * of the copyright holder.
+ */
+
 /*****************************************************************
  *  Stuff to create connections --- OS dependent
  *
@@ -523,6 +556,13 @@
     priv = (OsCommPtr) client->osPrivate;
     trans_conn = priv->trans_conn;
 
+#ifdef TSOL
+    if (pSecHook)
+        auth_id = (*pSecHook->CheckAuthorization) (proto_n, auth_proto,
+                                   string_n, auth_string, client, &reason);
+    else
+#endif /* TSOL */
+
     /* Allow any client to connect without authorization on a launchd socket,
        because it is securely created -- this prevents a race condition on launch */
     if (trans_conn->flags & TRANS_NOXAUTH) {
diff -ur a/randr/randrstr.h b/randr/randrstr.h
--- a/randr/randrstr.h	2018-10-25 07:13:21.000000000 +0000
+++ b/randr/randrstr.h	2020-05-10 09:39:08.811655781 +0000
@@ -65,7 +65,7 @@
 typedef XID RRProvider;
 typedef XID RRLease;
 
-extern int RREventBase, RRErrorBase;
+extern _X_EXPORT int RREventBase, RRErrorBase;
 
 extern int (*ProcRandrVector[RRNumberRequests]) (ClientPtr);
 extern int (*SProcRandrVector[RRNumberRequests]) (ClientPtr);
@@ -447,7 +447,7 @@
 /*  RRTimesRec	times[0]; */
 } RRClientRec, *RRClientPtr;
 
-extern RESTYPE RRClientType, RREventType;     /* resource types for event masks */
+extern _X_EXPORT RESTYPE RRClientType, RREventType;     /* resource types for event masks */
 extern DevPrivateKeyRec RRClientPrivateKeyRec;
 
 #define RRClientPrivateKey (&RRClientPrivateKeyRec)
